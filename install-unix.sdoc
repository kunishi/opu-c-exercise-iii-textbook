<?xml version="1.0" encoding="utf-8"?>
<doc xml:lang="ja">
<head>
<title>UNIX環境構築</title>
<author>国島丈生</author>
<date>2002-05</date>
</head>
<body>
<section title="まえがき">
以前は UNIX というと、演習室にあるようなワークステーションでしか動作しな
いものでした。ところが、最近、PCで動作するUNIX(PC-UNIXと呼ばれることがあ
ります)が登場し、UNIXを取り巻く環境が大きく変わってきています。特に、
Linux (http://www.linux.or.jp/)は、一般ユーザや多くのソフトウェアベンダー
を巻き込んで大きなブームを巻き起こしています。

今回の演習では、PC-UNIXの中から FreeBSD (http://www.jp.freebsd.org/)とい
うものを取り上げ、これをインストールすることで UNIX 環境を構築することに
します。FreeBSD は、Redhat, TurboLinux, Vine Linux などの Linux に比べて
以下のような特徴があり、今回の演習の目的に合っていると考えられます。
今回の演習では、FreeBSD 4.2-RELEASE<note>2002年11月現在の最新リリースは
4.7-RELEASE。</note> を用いることとします。

<ul>
<li>カーネルと呼ばれるUNIXの中核部分、各種コマンドなどが、そのソース(C言
語)を含めて統一的に管理されている。</li>
<li>余分なアプリケーションを入れずにインストールできる。</li>
</ul>

なお、本来、PC-UNIX をインストールするには、PCのハードウェアやUNIXに関す
る知識がいろいろと必要になりますが、これを詳しく説明すると一冊の本が書け
てしまいます。今回は、インストールに必要となる最低限の説明にとどめること
にします。さらに詳しく知りたい人や自分でもインストールしてみたい人は、
適宜書籍を参照してください。
<fyi title="2種類のUNIX">
 一口に「UNIX」といっても、Solaris(Sun Microsystems社、演習室のワークス
 テーションに搭載されている)、HP-UX(Hewlett Packard社)、IRIX(Silicon
 Graphics社)、Linux、FreeBSDなど、実際には多くの種類が存在します。そして
 これらは、カリフォルニア大学バークレイ校で開発が進められた「BSD」系列と、
 AT&amp;Tベル研究所で開発が進められた「System V」系列とに大きく分けることが
 できます。Solaris はどちらかというと System V (System V Release 4)、
 FreeBSDはどちらかというと BSD に分類することができます。ただし、最近は、
 BSD系列とSystemV系列とで機能的な差はほとんど無くなってきており、その境
 界は曖昧になってきています。
</fyi>
</section>
<section title="基礎知識">
<subsection title="オペレーティングシステム">
オペレーティングシステム(Operating System, OS)は各種デバイスの制御のた
めの機能の提供、応用プログラムの実行制御など、計算機が実際に動作するた
めに必要な基本機能を提供するソフトウェアである<note>詳細は「システムプ
ログラム」の講義を参照。</note>。各種 Windows や Linux・UNIX, MacOS な
どはすべてオペレーティングシステムである。

オペレーティングシステムが異なると実行制御の方法が異なるため、CPUが同
じであってもプログラムに互換性はない。例えば、WindowsのMicrosoft
OfficeがLinux上で動作しないのは、対象としているオペレーティングシステ
ムが異なるためである。
</subsection>
<subsection title="複数オペレーティングシステムの共存">
PCアーキテクチャでは、ディスク上に区画(スライス<note>FreeBSDでの用語。
一般にはパーティションと呼ばれることが多い。</note>, slice)を作成し、
区画内にオペレーティングシステムを導入する方式を採用している。一つのディ
スクには複数の区画が作成できるため、複数のオペレーティングシステムを一
つのディスク上に共存させ、ブートマネジャ<note>FreeBSDでの用語。</note>
と呼ばれるソフトウェアを利用して起動時に切り替えて使用することが可能と
なっている。
</subsection>
<subsection title="UNIX">
UNIXにはさまざまな種類があるが、その実行制御方法は似かよっている。
Linuxも、実行制御という点からみればUNIXの一種と言える。

UNIXは、同時に複数のプログラムが動作することのできるOS(マルチタスクOS)
であり、その構成は次のようになっている。
<ul>
<li>カーネル(kernel): 複数プログラムの実行制御、デバイス制御を行う。</li>
<li>各種常駐プログラム(デーモン, daemon)、ライブラリなどの基本部分</li>
<li>応用プログラム。Emacs や Netscape などはこれに相当する。</li>
</ul>

また、UNIXではパーティション内をさらに複数の区分(パーティション
<note>FreeBSD での用語。他のUNIXでは異なる用語を用いることがある。
</note>, partition)に分割し、区分ごとに用途を変えることがある。
</subsection>
</section>
<section title="準備">
今回の演習では必要ありませんが、通常は以下のようなことをあらかじめ準備し
ておく必要があります。
<subsection title="使用するデバイスの整理・情報収集">
現状の PC-UNIX では、安定動作するハードウェアデバイスの種類が Windows よ
りも少ない。また、動作する場合でも OS の初期値ではうまく動作せず、使用
条件に応じてパラメータを調整する必要があることもある。

あらかじめ WWW 等で、インストールしようと思っているPC-UNIX でサポート
されているデバイスを調査し、それに基づいてPCの機種を選んだり部品をそろ
えたりしなければならない。今回は、あらかじめ、FreeBSDで動作する部品ば
かりをそろえてある。
</subsection>
<subsection title="インストールメディア">
OSのインストールCD-ROMやブートフロッピーディスクを適宜用意する必要があ
ります。FreeBSDでも、CD-ROMから起動してインストールを行うことができま
すが、現状ではこの場合、英語でインストールメニューが出ます。そのため、
今回は、フロッピーディスクから日本語版インストーラを起動し、配布する
CD-Rからファイルをコピーするという方法をとります。
</subsection>
<subsection title="確認">
BIOSで、フロッピードライヴ(A)からの起動になっていることを確認。また、
イーサネットケーブルがPCに接続されていることを確認しておく。
</subsection>
</section>
<section title="インストール手順">
<subsection title="概要">
<ol>
<li>ブートフロッピーディスクから起動</li>
<li>必要なら各種ハードウェアのパラメータ設定(今回は必要なし)</li>
<li>区画(slice)の作成</li>
<li>区画内の区分(partition)の作成</li>
<li>インストールする配布物の選択</li>
<li>インストール</li>
<li>インストール後の設定</li>
</ol>
FreeBSD では、3.より後の作業は sysinstall と呼ばれるプログラムから行う。
</subsection>
<subsection title="ブートフロッピーディスクからの起動">
FreeBSD 4.2-RELEASE のブートフロッピーディスクはkern.flp, mfsroot.flp
の2枚から成っています。
<ol>
<li>kern.flp をフロッピーディスクドライヴに挿入して PC を起動</li>
<li>画面の指示にしたがってフロッピーディスクを mfsroot.flp に入れ替え
る</li>
<li>配布した CD-R をCD-ROMドライヴにセット</li>
</ol>
こののち、インストール用のFreeBSD カーネルが起動し、インストーラが立ち
上がります。
</subsection>
<subsection title="各種ハードウェアのパラメータ設定: Kernel Configuration Menu">
ハードウェアのデバイス情報(IRQ, I/Oポートアドレスなど)を編集する画面。
これを用いることで、標準で立ち上がるインストール用カーネルの設定情報を変
更し、標準状態では正しく動作しないハードウェアでもインストールに用いるこ
とができます。

今回は特に設定する必要はありませんので、<b>↓</b>キーを用いて「Skip
kernel configuration and continue with installation」へカーソルを持っ
ていき、<b>Enter</b>キーを押します。ここからは GUI (Graphical User
Interface)ベースのインストーラ(sysinstall)が起動します。
</subsection>
<subsection title="sysinstall">
sysinstall では、画面に出てくる指示にしたがってインストールを進める。
やや操作方法が独特で間違えやすいので、以下の点に注意して操作すること。
<ul>
<li>項目を移動→項目の選択→OKかキャンセルかを選択→実行という流れにな
る。</li>
<li>場合によっては、Exit項目を選択して上位メニューに戻らなければならな
いこともある。</li>
<li>項目間の移動は矢印キーまたはタブキー</li>
<li>項目の<b>選択</b>が<b>SPACE</b>キー。サブメニューに入る場合と、
[X]マークがついて選択される場合がある。</li>
<li>OKかキャンセルかの選択は<b>TAB</b>キー</li>
<li>項目の<b>実行</b>が<b>ENTER</b>キー(OK, キャンセルとも)</li>
</ul>
<subsubsection title="Localization Menu">
インストーラの用いる言語の選択。英語、日本語、韓国語、ロシア語、中国語が
使用できる。以下の説明は「日本語」を選択したとして仮定している。
</subsubsection>
<subsubsection title="メインメニュー">
一連のインストール作業は "Standard" (標準インストール)で行うことができ
る。また、インストールオプションの選択、インストール後の設定などに入る
ことができる。
</subsubsection>
<subsubsection title="スライスの設定: FDISKパーティションエディタ">
スライスの作成を行う。今回はFreeBSDしかインストールしないので、
「ディスク全体を使用(A)」を実行した後、「終了(Q)」を実行。「本来のパー
ティションテーブル」は保持しておくようにする。
</subsubsection>
<subsubsection title="ブートマネージャのインストール">
OSの起動切り替えを行うプログラムのインストールなど。今回は切り替え
の必要がないので "Standard" を選択。
</subsubsection>
<subsubsection title="FreeBSDディスクラベルエディタ">
FreeBSD用の区画(slice)の中をさらにいくつかの区分(partition)に分割する
ことができる。今回は「全てをデフォルトに設定(A)」を実行した後、「終了
(Q)」を実行する。
</subsubsection>
<subsubsection title="配布ファイルの選択">
インストールするファイル群の指定。あとの演習で必要となるので、以下のように
する。
<ul>
<li>"X-Developer" (全ソース、バイナリ、X Window System)を選択。</li>
<li>portsコレクション……インストール</li>
<li>XFree86配布物……以下のもの(デフォルト値がこうなっているはずである)
<ul>
<li>Basic(基本コンポーネント)……bin, cfg, lib, man, prog, set</li>
<li>Server(Xサーバ)……SVGA, VGA16, Mach64</li>
<li>Fonts(フォント)……fnts, non</li>
</ul>
</li>
</ul>
</subsubsection>
<subsubsection title="インストールメディア">
インストールする配布物をどこから取得するかを指定。CD-ROM のほか、ネッ
トワーク経由で取得することも可能になっている。今回は "CDROM" を選択。

このあと確認のメッセージが出たあと、インストール作業が始まる。ここまで
の作業に間違いがなければ約15分程度かかる。時間が短すぎる場合はどこかに
間違いのあった可能性がある。
</subsubsection>
</subsection>
</section>
<section title="インストール後の設定">
インストールが終了した後、インストール後の設定を行う。下記の項目以外に
ついては、<a href="#setting"></a>を参照のこと。
<dl>
<dt>イーサネット</dt>
<dd>ネットワークインタフェースとして "fxp0" (Intel EtherExpress
Pro/100B ethernet device driver)を選択した後、<a href="#ether_setting"></a>の
ように設定する。そのあと、インタフェースを有効化する。</dd>
<dt>コンソール機能のカスタマイズ</dt>
<dd>Yes。キーボードマップのみ設定。「システムコンソールキーマップ」メ
ニューに入り、日本語キーボードの場合は "Japanese 106"とする。英語キー
ボードの場合は何も設定せず Cancel。</dd>
<dt>タイムゾーンの設定</dt>
<dd>Yes。CMOSクロックはUTC(世界標準時)に<b>合わせず</b>に使用。その後、
タイムゾーンを "Japan"(省略形JST)に設定。</dd>
<dt>マウスの設定</dt>
<dd>USB以外のマウスが接続されている。マウスの種類…"Auto" (自動選択)、
マウスポート……PS/2、追加フラグ…なし</dd>
<dt>システム管理者(root)のパスワード</dt>
<dd>本来は厳重に管理すべきものですが、今回は実験の都合上、ホスト名と同
じものにしておいてください。</dd>
</dl>
<table title="インストール後の設定" id="setting">
<thead>
<tr>
<th>項目名</th>
<th>設定内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>末端のホストか</td>
<td>Yes</td>
</tr>
<tr>
<td>FTPアクセス</td>
<td>通常ユーザのみ許可</td>
</tr>
<tr>
<td>NFSサーバ</td>
<td>No</td>
</tr>
<tr>
<td>NFSクライアント</td>
<td>No</td>
</tr>
<tr>
<td>セキュリティレベルの設定</td>
<td>No (mediumレベルに設定)</td>
</tr>
<tr>
<td>Linuxバイナリ互換機能</td>
<td>No</td>
</tr>
<tr>
<td>Xサーバの設定</td>
<td>No(あとで行う)</td>
</tr>
<tr>
<td>パッケージコレクション</td>
<td>No (あとで行う)</td>
</tr>
<tr>
<td>ユーザアカウントの設定</td>
<td>No (あとで行う)</td>
</tr>
</tbody>
</table>
<table title="イーサネットオプションの設定一覧" id="ether_setting">
<thead>
<tr>
<th>項目名</th>
<th>値</th>
</tr>
</thead>
<tbody>
<tr>
<td>IPv6</td>
<td>使用しない</td>
</tr>
<tr>
<td>DHCP</td>
<td>使用しない</td>
</tr>
<tr>
<td>ホスト名</td>
<td>演習時に指示</td>
</tr>
<tr>
<td>ドメイン名</td>
<td>c.oka-pu.ac.jp</td>
</tr>
<tr>
<td>IPv4ゲートウェイ</td>
<td>163.225.216.254</td>
</tr>
<tr>
<td>ネームサーバ</td>
<td>163.225.215.252</td>
</tr>
<tr>
<td>IPv4アドレス</td>
<td>演習時に指示</td>
</tr>
<tr>
<td>ネットマスク</td>
<td>255.255.255.0(自動設定される)</td>
</tr>
<tr>
<td>ifconfigへの特別なオプション</td>
<td>なし</td>
</tr>
</tbody>
</table>

このあと総合設定メニューに移動し、"Cancel"を実行してメインメニューに戻る。
これでインストール作業は終了なので、画面の指示に従い、PCを再起動する。
CD-ROMを取り出すのは、再起動が始まってからにすること。

このあと起動中に、各種デバイスが認識された旨のメッセージが出力されるの
で、よく見ておくこと。これらのメッセージの多くは、"dmesg" というコマン
ドによって表示させることができる。次のような表示が出れば、インストール
は成功である。
<program>
Wed Oct  6 09:46:52 JST 1999

FreeBSD/i386 (comx200.c.oka-pu.ac.jp) (ttyv0)

login:
</program>
</section>
<section title="起動後の設定">
<subsection title="ログイン">
管理用アカウント(root)でログインしてみます。Xウインドウもまだ使えません
し、mule(emacs)やnetscapeなども当然まだ動作しませんが、ls, cd, pwd など
の基本的な UNIX コマンドは動作しますので、いろいろ探検してみてください。
たとえば、/usr/src には、今動いている FreeBSD 自体のソースファイル(C言語
で書かれています)が一式置いてあります。
</subsection>
<subsection title="留意点">
ついで、インストール時に行わなかった追加の設定をいくつか行う。ここでは、
インストール時に用いたGUIプログラム sysinstall (/stand/sysinstall)を用
いるが、以下の点に留意すること。
<ul>
<li>sysinstallはシステム管理者権限で実行すること。</li>
<li>日本語メニューを使用してから sysinstall を終了すると、キーボードか
らの入力が端末に出力されない状態におちいることがある。これは 
sysinstall のバグであり、"stty sane" というコマンドを実行すると復旧す
る。</li>
</ul>
<fyi title="UNIXのユーザ管理">
 UNIXでは、ユーザ、ユーザの集合である「グループ」の2つでユーザを管理し
 ている。それぞれ便宜上名前になっているが、システム的にはUID(ユーザID)、
 GID(グループID)という数字で管理が行われている。ファイルやディレクトリ
 に対するパーミッション(アクセス権管理)は、「持ち主のユーザ」「持ち主
 の属する(ある)グループ」「それ以外のユーザ」の3レベルに分けて管理され
 る。たとえば、"chmod 755 foo.sh" というUNIXコマンドを実行すると、「持
 ち主のユーザ」は rwx(2進法で7、読み出し・書き込み・実行可能)、「持ち
 主の属する(ある)グループ」は r-x (2進法で5、読み出し・実行可能だが書
 き込み不可)、「それ以外のユーザ」は r-x というようにアクセス権が設定
 される。

 なお、UNIXではシステム管理者アカウントはrootという名前になっている。
 たいていのシステムファイルはシステム管理者の権限でなければ変更するこ
 とはできないが、システム管理者の権限を得るには次の2通りの方法がある。
 <ul>
 <li>アカウントrootでログインする。</li>
 <li>一般ユーザでログインしている状態で su コマンドを実行する。</li>
 </ul>
</fyi>
</subsection>
<subsection title="ユーザアカウント作成">
システム管理者アカウント "root" というユーザは強力な権限を持ち、システ
ムを破壊してしまうことも可能である。したがって、必要のあるとき以外極力
使わないようにすることが望ましい。普段は「一般ユーザ」と呼ばれる、より
権限の弱いユーザで作業を行い、必要になったら root の権限を取得する
<note>このためのUNIX コマンドが"su"である。</note>
のが、UNIXでの一般的な管理方法である。

そこで、まず一般ユーザのアカウントを作成する。
<ol>
<li>sysinstall を起動し、"Configure"を選択。ついで設定メニューで"User Management"を選択。</li>
<li>「ユーザグループをシステムに追加する」を選択。</li>
<li>ユーザグループ: users, グループID: 1001を入力し、「OK」を実行。
「グループメンバ」は空欄でよい。</li>
<li>「ユーザをシステムに追加する」を選択。</li>
<li>ログインID: user???、UID: 1??? (??? は各ホスト名の下3桁の数字と同
じ)、グループ: users、ログインシェル: /bin/csh。パスワードはグループご
とに決める。ほかはそのままでよい。</li>
<li>「Exit」を選択し、「FreeBSD設定メニュー」に移動。</li>
<li>「Exit」を選択し、「/stand/sysinstallメインメニュー」に移動。</li>
<li>「導入終了」を選択。</li>
</ol>

このあと、作成した一般ユーザで実際にログインできるようになったことを確
かめ、さらにシステム管理者権限で /etc/group というファイルを編集する。
具体的には、"wheel:*:0:root" と書かれた行の最後に "user???" を追加する。
たとえば、user201を追加した後の状態は次のようになる。
<program>
wheel:*:0:root,user201
</program>
</subsection>

<subsection title="hostsファイルの設定など">
以降の実験でほかのホストにアクセスしたり、適宜スーパユーザの権限で作業し
たりする必要があるので、そのための設定をしておく。

システム管理者権限で /etc/hosts を編集し、次の内容を末尾に付け加える。
すでに書かれている行は書かなくてよい<note>ここまでの作業が正しくできていれば、自分の班のホスト名はすでに書かれているはずである。</note>。
<program>
163.225.216.200	comx200.c.oka-pu.ac.jp comx200
163.225.216.201	comx201.c.oka-pu.ac.jp comx201
163.225.216.202	comx202.c.oka-pu.ac.jp comx202
163.225.216.203	comx203.c.oka-pu.ac.jp comx203
163.225.216.204	comx204.c.oka-pu.ac.jp comx204
163.225.216.205	comx205.c.oka-pu.ac.jp comx205
163.225.216.206	comx206.c.oka-pu.ac.jp comx206
163.225.216.207	comx207.c.oka-pu.ac.jp comx207
163.225.216.208	comx208.c.oka-pu.ac.jp comx208
163.225.216.209	comx209.c.oka-pu.ac.jp comx209
163.225.216.210	comx210.c.oka-pu.ac.jp comx210
163.225.216.211	comx211.c.oka-pu.ac.jp comx211
163.225.216.212	comx212.c.oka-pu.ac.jp comx212
163.225.216.213	comx213.c.oka-pu.ac.jp comx213
</program>
<fyi title="vi簡易マニュアル">
<ul>
<li>h, j, k, l……カーソルをそれぞれ左、下、上、右へ移動</li>
<li>i 文字列 ESC……文字列をカーソル位置から挿入</li>
<li>a 文字列 ESC……文字列をカーソル位置の1文字後ろから挿入</li>
<li>o 文字列 ESC……文字列をカーソル位置の次の行に挿入</li>
<li>x……カーソル位置の文字を1文字消去</li>
<li>:w!……強制書き込み(セーヴ)</li>
<li>ZZ……セーヴ後終了</li>
<li>:q!……セーヴしないで終了</li>
</ul>
</fyi>
<fyi title="ホスト名とIPアドレス">
 インターネットに接続されているすべての計算機は、全世界で一意に決まる
 番号(IPアドレス)と、ホスト名とを持っている。たとえば、情報通信工学科
 のメールサーバのIPアドレスは163.225.215.253、ホスト名は 
 com-server1.c.oka-pu.ac.jp である。/etc/hosts は、ホスト名とIPアドレ
 スの対応表である。また、/etc/hostsに書かれていないホストのIPアドレス
 等の情報を取得するサービスが DNS(Domain Name Service)であり、そのサー
 ビスを提供するサーバを俗に「ネームサーバ」と呼ぶ。
</fyi>
</subsection>
<subsection title="パッケージ">
次週以降の演習で用いるプログラム類をインストールしておく。なお、ここで
は「パッケージ」と呼ばれる、コンパイル済みのプログラム・設定ファイル一
式をインストールする。一般には、これらのプログラムはC言語などで書かれ
たファイル(ソースファイル)で配布されているので、これを自分でコンパイル
しなければならない。
<ol>
<li>CDROMをセットした後、/stand/sysinstall を起動して、"Configure"を選択。</li>
<li>設定メニューで "Packages" を選択。</li>
<li>配布先として "CDROM" を選択。</li>
<li>japanese カテゴリの以下のパッケージを選択: ja-kterm-6.2.0, ja-netscape-communicator-4.76</li>
<li>パッケージ選択メニューに戻り、"Install" を実行。</li>
</ol>
</subsection>
<subsection title="XFree86の設定">
普段みなさんがなにげなく使っているXウインドウシステムだが、Linux や 
FreeBSD をインストールする場合、最大の関門がXウインドウシステムの設定
である。それは以下の理由による。
<ul>
<li>PCの場合グラフィックボードが多種多様で、それぞれによってXサーバが
異なる。</li>
<li>Xサーバを選択するだけでなく、グラフィックボードごとに適切なパラメー
タを与えて設定を行う必要があるが、この際、グラフィックボードのハードウェ
アに対する深い知識が必要になる。</li>
<li>極端に間違った設定を行うと、特にノートPCや液晶ディスプレイでは、ハー
ドウェアを壊しかねない。</li>
</ul>

今回は、この部分はあらかじめ作成した設定ファイルを取得してもらうことと
した。anonymous ftp で XF86Config.101 (英語キーボードの場合)または 
XF86Config.106 (日本語キーボードの場合) というファイルを取得し(場所は
別途指示する)た後、root でログインして以下の手順を行う。
<program>
 取得したファイルを /etc/XF86Config にコピーする。たとえば:
 # cp XF86Config.101 /etc/XF86Config
 その後、次の作業を行う。
 # cd /usr/X11R6/bin
 # ln -s XF86_Mach64 X
 # rehash
 # startx
</program>
これでXウィンドウが立ち上がれば成功である。

<fyi title="anonymous ftp(匿名ftp)">
 ftp というコマンドは、ftpをかける側の計算機にもユーザアカウントを持って
 いないと実行できない。これでは、フリーウェアなどをインターネットで公開
 する場合、ユーザアカウントの管理がたいへんである。そこで、anonymous と
 いうユーザ名でだれでも ftp ができるようにしている場合がある。この場合、
 パスワードは自分のメールアドレスを入力することがマナーになっている。WWW 
 ブラウザで、"ftp://..."というURLにアクセスすることがあるが、これは
 上記の anonymous ftp の処理をブラウザを通して行っているのである。

 anonymous ftp は次のような手順で行う。<b>psi.c.oka-pu.ac.jp というホストに 
 anonymous ftp を行っている例</b>を示す。なお、一般ユーザで書いているが、
 root で行ってもかまわない。
<program>
 % ftp psi.c.oka-pu.ac.jp
 Connected to psi.c.oka-pu.ac.jp.
 ...
 Name (psi.c.oka-pu.ac.jp:user201): anonymous
 ...
 Password: (自分のメールアドレス)
 ...
 ftp&gt; cd ディレクトリ
 ...
 ftp&gt; get 取得したいファイル名
 ...
 ftp&gt; quit
 ...
 %
</program>
 途中で出力されるメッセージを良くみて、正しくファイルが取得できたことを
 確認しておくこと。とくに、ftp を実行したディレクトリに書き込み権限がな
 いと、ファイルを取得できない。
</fyi>

最近のバージョンの XFree86 ではセキュリティが強化されており、このまま
の状態では一般ユーザで startx が実行できない。この解決策はいくつかある
が、ここでは XDM (X Display Manager) を使った方法を示す。startx が実行
できることが確認できたら、以下の作業を行う。
<program>
ファイル /etc/ttys を編集。途中に次のような行があるので

ttyv8   "/usr/X11R6/bin/xdm -nodaemon"  xterm   off secure

これを

ttyv8   "/usr/X11R6/bin/xdm -nodaemon"  xterm   on  secure

と書き換える。その後、再起動を行う。
</program>

時間的余裕のある班は、教官もしくはTAの立ち会いのもと、自分たちで
XF86Configを作成してもよい。将来 PC-UNIX に自分で触れたいと思っている
人は、なるべくXF86Configを自分で作成する作業をやっておいた方が望ましい。
</subsection>
<subsection title="emacsのインストール">
emacsはふだん頻繁に用いているツールであるが、OSに標準で含まれているプ
ログラムではない
<note>多くのLinuxディストリビューションや MacOS X など、標準で含まれて
いる UNIX も増えてきている。</note>
。後の作業のためにemacsをインストールし、システム管理作業の一端を体験
する。
<subsubsection title="手順">
anonymous ftp を用いて comx200.c.oka-pu.ac.jp:/pub から 
make-3.79.1.tar.gz, emacs-20.7.tar.gz というファイルを取得した後、以下
の作業を行う。

Emacsのコンパイル作業には GNU make (gmake)が必要である。そのため、まず
gmake をコンパイル・インストールしてから Emacs のコンパイル・インストー
ルを行う。
<program title="GNU makeのインストール">
% gzcat make-3.79.1.tar.gz | tar xvf -
  (この作業を行うと make-3.79.1 というディレクトリが作られる)
% cd make-3.79.1
% ./configure --program-prefix=g
% make
% su
# make install
# exit
% rehash
</program>
<program title="emacs のインストール">
% gzcat emacs-20.7.tar.gz | tar xvf -
  (この作業を行うと、emacs-20.7 というディレクトリが作られる)
% cd emacs-20.7
% ./configure
% gmake
% su
# gmake install
# exit
% rehash
</program>
この作業を終えると emacs が使えるようになる。
</subsubsection>
<fyi title="GNU make">
gmake (GNU make)は Free Software Foundation で作られた make コマンドで
あり、Solaris に標準で付属している make よりもひじょうに多くの機能を持
つ。また、UNIX であればたいていコンパイルすることができるので、GNU
make の使用を前提にすれば OS を気にすることなく Makefile を記述するこ
とができる。そのため、Emacs や tcsh など、最近のフリーウェアの make は 
GNU make を使うことを前提としていることが多い。
</fyi>
<fyi title="configureとxmkmf">
UNIX にもさまざまな種類があり、それぞれでヘッダやライブラリなどが微妙
 に異なっている。したがって、どの UNIX でも動作するプログラムを書くの
 は、プログラムの規模が大きくなるにつれ、難しくなる。

このような汎用的なプログラムを書くための支援ツールとしてよく知られてい
 るのが GNU configure と xmkmf である。これらはいずれも OS に用意され
 ているライブラリなどを動的にチェックし、環境に適したコンパイラオプショ
 ンやヘッダファイルを生成してくれるコマンドである。
</fyi>
</subsection>
<subsection title="UNIXの停止方法・再起動の方法">
緊急の事態を除き、PCの電源を落とす場合はUNIXシステムに悪影響を与えない
ような手順を踏む必要があります。

電源停止の場合は次の手順をシステム管理者権限で実行してください。
<ol>
<li>shutdown -h nowというUNIXコマンドを実行する。</li>
<li>「電源を落としても良い」旨のメッセージ(英語)が出力されたら、電源を
切る。コンセントを引き抜くなどの手荒なことはしないこと。また、メッセー
ジが出力された段階でキーボードのキーを押してしまうとPCが再起動するので、
注意すること。

なお、今回実験に用いたPCによっては電源ボタンを押すだけでは電源の
切れないものがある。この場合は、キーボードのキーを適当に押し、
再起動が始まった瞬間に電源ボタンを押すとよいようである。</li>
<li>電源を切った後、必要に応じてディスプレイの電源を切る。</li>

また再起動の場合は、システム管理者権限で "shutdown -r now" というコマ
ンドを実行してください。
</ol>
</subsection>
</section>
<section sequencable="false" title="課題">
<ol>
<li>実験の過程で直面したトラブルについて、その症状、原因の究明過程、原因、
解決方法などについて(自分で調べるなどして)記述せよ。</li>
<li>PCの起動時に表示されたメッセージを dmesg コマンドを使って確認し、
それらをレポートに添付しなさい。その中で自分達が使った部品がどこに表示
されているか、わかる範囲で明記しなさい。</li>
<li>ディスク領域を複数のスライスに分割することのメリット・デメリット、
および一つのスライスを複数のパーティションに分割することのメリット・デ
メリットを考察しなさい。</li>
<li>OSはどのようにして起動されるのか、ハードウェアに電源が入ってからの
過程を調べて書け。</li>
</ol>
</section>
</body>
</doc>